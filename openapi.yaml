openapi: 3.0.3
info:
  title: Dokumen API Cloud Function - OpenAPI 3.0
  description: >-
    Dokumen API Cloud Function Aplikasi Internship Monitoring
  termsOfService: https://github.com/intern-monitoring/swagger
  contact:
    url: http://intermoni.my.id/proposal/team.html
  license:
    name: Intermoni Package
    url: https://pkg.go.dev/github.com/intern-monitoring/backend-intermoni
  version: 1.0.11
externalDocs:
  description: Repo GCF
  url: https://intern-monitoring.github.io/gcf/
servers:
  - url: https://asia-southeast2-bursakerja-project.cloudfunctions.net
tags:
  - name: Auth
    description: Auth to Access to API
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://intermoni.my.id/gcf/login/function.go
  - name: SignUp Mahasiswa
    description: Registrasi Mahasiswa
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://intermoni.my.id/gcf/signup_mahasiswa/function.go
  - name: SignUp Mitra
    description: Registrasi Mitra
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://intermoni.my.id/gcf/signup_mitra/function.go
  - name: User
    description: Get Data User oleh Admin
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://intermoni.my.id/gcf/user/function.go
  - name: Mahasiswa
    description: Data Mahasiswa
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://intermoni.my.id/gcf/mahasiswa/function.go
  - name: Mitra
    description: Data Mitra
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://intermoni.my.id/gcf/mitra/function.go
  - name: Pembimbing
    description: Data Pembimbing
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://intermoni.my.id/gcf/pembimbing/function.go
  - name: Mentor
    description: Data Mentor
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://intermoni.my.id/gcf/mentor/function.go
  - name: Magang
    description: Data Magang
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://intermoni.my.id/gcf/magang/function.go
  - name: Mahasiswa Magang
    description: Data Mahasiswa Magang
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://intermoni.my.id/gcf/mahasiswamagang/function.go
  - name: Seleksi
    description: Seleksi berkas & wawancara
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://intermoni.my.id/gcf/seleksi/function.go
  - name: Task
    description: Task magang
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://intermoni.my.id/gcf/task/function.go
  - name: Report
    description: Report magang
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://intermoni.my.id/gcf/report/function.go
  - name: Email
    description: Ganti Email
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://intermoni.my.id/gcf/email/function.go
  - name: Password
    description: Ganti Password
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://intermoni.my.id/gcf/password/function.go
paths:
  /intermoni-login:
    post:
      tags:
        - Auth
      summary: Login get Token and Role
      description: Login and Get User Token
      operationId: authService
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Login"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponse"
        "405":
          description: Invalid input
  /intermoni-signup-mahasiswa:
    post:
      tags:
        - SignUp Mahasiswa
      summary: Signup Mahasiswa
      description: Register a new Mahasiswa
      operationId: signupMahasiswa
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignupMahasiswaRequest"
      responses:
        "201":
          description: Mahasiswa signed up successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
        "400":
          description: Invalid input or Mahasiswa already exists
  /intermoni-signup-mitra:
    post:
      tags:
        - SignUp Mitra
      summary: Signup Mitra
      description: Register a new Mitra
      operationId: signupMitra
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignupMitraRequest"
      responses:
        "201":
          description: Mitra signed up successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
        "400":
          description: Invalid input or Mitra already exists
  /intermoni-user:
    get:
      tags:
        - User
      summary: Get User
      description: Data User
      operationId: getUserByID
      parameters:
        - name: id
          in: query
          schema:
            type: string
          description: ID of User
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
              examples:
                allUsers:
                  summary: Get all users
                  value:
                    - _id: "1"
                      email: john@gmail.com
                      role: mahasiswa
                    - _id: "2"
                      email: jane@gmail.com
                      role: mitra
                oneUser:
                  summary: Get User By ID
                  value:
                    akun:
                      {
                        "_id": "1",
                        "email": "john@gmail.com",
                        "role": "mahasiswa",
                      }
        "400":
          description: Invalid status value
      security:
        - token:
            - write:apiKey
            - read:apiKey
  /intermoni-mahasiswa:
    get:
      tags:
        - Mahasiswa
      summary: Get Mahasiswa
      description: Data Mahasiswa
      operationId: getMahasiswaById
      parameters:
        - name: id
          in: query
          schema:
            type: string
          description: ID of Mahasiswa
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Mahasiswa"
                  - $ref: "#/components/schemas/AdminResponse"

        "404":
          description: Mahasiswa not found
      security:
        - token:
            - write:apiKey
            - read:apiKey
    put:
      tags:
        - Mahasiswa
      summary: Update Mahasiswa oleh Admin & Mahasiswa
      description: Update an existing Mahasiswa
      operationId: updateMahasiswa
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
          description: ID of Mahasiswa
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Mahasiswa"
            examples:
              mahasiswa:
                summary: Update Profil oleh Mahasiswa
                value:
                  namalengkap: "John Doe"
                  tanggallahir: "2002-08-12"
                  jeniskelamin: "Laki-laki"
                  nim: "123456789"
                  perguruantinggi: "Universitas ABC"
                  prodi: "Teknik Informatika"
                  file: "link_gambar.jpg"
              admin:
                summary: Seleksi Mahasiswa oleh Admin
                value:
                  seleksikampus: 1
      responses:
        "200":
          description: Mahasiswa updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
        "404":
          description: Mahasiswa not found
      security:
        - token:
            - write:apiKey
            - read:apiKey
  /intermoni-mitra:
    get:
      tags:
        - Mitra
      summary: Get Mitra
      description: Data Mitra
      operationId: getMitraById
      parameters:
        - name: id
          in: query
          schema:
            type: string
          description: ID of Mitra
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Mitra"
        "404":
          description: Mitra not found
      security:
        - token:
            - write:apiKey
            - read:apiKey
    put:
      tags:
        - Mitra
      summary: Update Mitra
      description: Update an existing Mitra
      operationId: updateMitra
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
          description: ID of Mitra
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Mitra"
            examples:
              mitra:
                summary: Update Profil oleh Mitra
                value:
                  namanarahubung: "John Doe"
                  nohpnarahubung: "08123456789"
                  nama: "Mitra ABC"
                  kategori: "Perusahaan"
                  sektorindustri: "Teknologi"
                  tentang: "Deskripsi mengenai Mitra ABC"
                  alamat: "Jalan Mitra ABC No. 123"
                  website: "https://www.mitraabc.com"
                  file: "link_gambar.jpg"
              admin:
                summary: Confirm Mou oleh Admin
                value:
                  mou: 1
      responses:
        "200":
          description: Mitra updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
        "404":
          description: Mitra not found
      security:
        - token:
            - write:apiKey
            - read:apiKey
  /intermoni-pembimbing:
    post:
      tags:
        - Pembimbing
      summary: Create Pembimbing
      description: Create a new Pembimbing
      operationId: createPembimbing
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Pembimbing"
      responses:
        "201":
          description: Pembimbing created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
        "400":
          description: Invalid input
      security:
        - token:
            - write:apiKey
            - read:apiKey
    get:
      tags:
        - Pembimbing
      summary: Get Pembimbing
      description: Data Pembimbing
      operationId: getPembimbingById
      parameters:
        - name: id
          in: query
          schema:
            type: string
          description: ID of Pembimbing
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pembimbing"
        "404":
          description: Pembimbing not found
      security:
        - token:
            - write:apiKey
            - read:apiKey
    put:
      tags:
        - Pembimbing
      summary: Update Pembimbing
      description: Update an existing Pembimbing
      operationId: updatePembimbing
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
          description: ID of Pembimbing
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Pembimbing"
      responses:
        "200":
          description: Pembimbing updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
        "404":
          description: Pembimbing not found
      security:
        - token:
            - write:apiKey
            - read:apiKey
  /intermoni-mentor:
    post:
      tags:
        - Mentor
      summary: Create Mentor
      description: Create a new Mentor
      operationId: createMentor
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MentorRequest"
      responses:
        "201":
          description: Mentor created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
        "400":
          description: Invalid input
      security:
        - token:
            - write:apiKey
            - read:apiKey
    get:
      tags:
        - Mentor
      summary: Get Mentor
      description: Data Mentor
      operationId: getMentorById
      parameters:
        - name: id
          in: query
          schema:
            type: string
          description: ID of Mentor
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Mentor"
        "404":
          description: Mentor not found
      security:
        - token:
            - write:apiKey
            - read:apiKey
    put:
      tags:
        - Mentor
      summary: Update Mentor
      description: Update an existing Mentor
      operationId: updateMentor
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
          description: ID of Mentor
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MentorRequest"
      responses:
        "200":
          description: Mentor updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
        "404":
          description: Mentor not found
      security:
        - token:
            - write:apiKey
            - read:apiKey
  /intermoni-magang:
    post:
      tags:
        - Magang
      summary: Create Magang
      description: Create a new Magang
      operationId: createMagang
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MagangRequest"
      responses:
        "201":
          description: Magang created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
        "400":
          description: Invalid input
      security:
        - token:
            - write:apiKey
            - read:apiKey
    get:
      tags:
        - Magang
      summary: Get Magang
      operationId: getMagangById
      parameters:
        - name: id
          in: query
          schema:
            type: string
          description: ID of Magang
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Magang"
        "404":
          description: Magang not found
      security:
        - token:
            - write:apiKey
            - read:apiKey
    put:
      tags:
        - Magang
      summary: Update Magang
      description: Update an existing Magang
      operationId: updateMagang
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
          description: ID of Magang
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MagangRequest"
      responses:
        "200":
          description: Magang updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
        "404":
          description: Magang not found
      security:
        - token:
            - write:apiKey
            - read:apiKey
  /intermoni-mahasiswa-magang:
    post:
      tags:
        - Mahasiswa Magang
      summary: Apply Magang oleh Mahasiswa
      description: Create a new Mahasiswa Magang
      operationId: createMahasiswaMagang
      # requestBody:
      #   content:
      #     application/json:
      #       schema:
      #         $ref: "#/components/schemas/MahasiswaMagangRequest"
      parameters:
        - name: id
          in: query
          schema:
            type: string
          description: ID of Magang
      responses:
        "200":
          description: Mahasiswa Magang created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
        "400":
          description: Invalid input
      security:
        - token:
            - write:apiKey
            - read:apiKey
    get:
      tags:
        - Mahasiswa Magang
      summary: Get Mahasiswa Magang
      description: Data Mahasiswa Magang
      operationId: getMahasiswaMagangById
      parameters:
        - name: id
          in: query
          schema:
            type: string
          description: ID of Mahasiswa Magang
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MahasiswaMagang"
        "404":
          description: Mahasiswa Magang not found
      security:
        - token:
            - write:apiKey
            - read:apiKey
    put:
      tags:
        - Mahasiswa Magang
      summary: Update Mahasiswa Magang
      description: Update an existing Mahasiswa Magang
      operationId: updateMahasiswaMagang
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
          description: ID of Mahasiswa Magang
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MahasiswaMagang"
            examples:
              admin:
                summary: Tambah Pembimbing oleh Admin
                value:
                  pembimbing: { "_id": "123456789" }
              mitra:
                summary: Tambah Mentor oleh Mitra
                value:
                  mentor: { "_id": "123456789" }
              mahasiswa:
                summary: Konfirmasi Magang oleh Mahasiswa
                value:
                  status: 1

      responses:
        "200":
          description: Mahasiswa Magang updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
        "405":
          description: Mahasiswa Magang not found
      security:
        - token:
            - write:apiKey
            - read:apiKey
    delete:
      tags:
        - Mahasiswa Magang
      summary: Batal Apply Magang oleh Mahasiswa
      description: Delete Mahasiswa Magang by its ID
      operationId: deleteMahasiswaMagang
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
          description: ID of Mahasiswa Magang
      responses:
        "200":
          description: Mahasiswa Magang deleted successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
        "405":
          description: Mahasiswa Magang not found
      security:
        - token:
            - write:apiKey
            - read:apiKey
  /intermoni-seleksi:
    put:
      tags:
        - Seleksi
      summary: Seleksi Berkas & Wawancara
      description: Seleksi Mahasiswa oleh Mitra
      operationId: updateSeleksi
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
          description: ID of Mahasiswa Magang
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MahasiswaMagang"
            examples:
              seleksiberkas:
                summary: Seleksi berkas
                value:
                  seleksiberkas: 1
              seleksiwawancara:
                summary: Seleksi wawancara
                value:
                  seleksiwawancara: 1
      responses:
        "200":
          description: Seleksi updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
        "405":
          description: Seleksi not found
      security:
        - token:
            - write:apiKey
            - read:apiKey
  /intermoni-task:
    post:
      tags:
        - Task
      summary: "Tambah task oleh mentor"
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
          description: ID of Mahasiswa Magang
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TaskRequest"
      responses:
        "201":
          description: "Task created successfully"
      security:
        - token:
            - write:apiKey
            - read:apiKey
    get:
      tags:
        - Task
      summary: "Get tasks"
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
          description: ID of Mahasiswa Magang
      responses:
        "200":
          description: "Successful operation"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Task"
      security:
        - token:
            - write:apiKey
            - read:apiKey
    put:
      tags:
        - Task
      summary: "Update task oleh mentor"
      parameters:
        - name: "id"
          in: query
          required: true
          description: ID of Mahasiswa Magang
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TaskRequest"
      responses:
        "200":
          description: "Task updated successfully"
        "404":
          description: "Task not found"
      security:
        - token:
            - write:apiKey
            - read:apiKey
  /intermoni-report:
    post:
      tags:
        - Report
      summary: Create Report
      description: Create a new Report
      operationId: createReport
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/ReportRequest"
      responses:
        "200":
          description: Report created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
        "400":
          description: Invalid input
      security:
        - token:
            - write:apiKey
            - read:apiKey
    get:
      tags:
        - Report
      summary: Get Report by ID
      description: Get a Report by its ID
      operationId: getReportById
      parameters:
        - name: id
          in: query
          schema:
            type: string
          description: ID of Report
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Report"
        "405":
          description: Report not found
      security:
        - token:
            - write:apiKey
            - read:apiKey
    put:
      tags:
        - Report
      summary: Update Report
      description: Update an existing Report
      operationId: updateReport
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
          description: ID of Report
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/ReportRequest"
      responses:
        "200":
          description: Report updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
        "404":
          description: Report not found
      security:
        - token:
            - write:apiKey
            - read:apiKey
    delete:
      tags:
        - Report
      summary: Delete Report
      description: Delete a Report by its ID
      operationId: deleteReport
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
          description: ID of Report
      responses:
        "200":
          description: Report deleted successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
        "405":
          description: Report not found
      security:
        - token:
            - write:apiKey
            - read:apiKey
  /intermoni-user-email:
    put:
      tags:
        - Email
      summary: Change Email
      description: Change the email address of the user
      operationId: changeEmail
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangeEmailRequest"
      responses:
        "200":
          description: Email changed successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
        "400":
          description: Invalid input or Email change failed
      security:
        - token:
            - write:apiKey
            - read:apiKey
  /intermoni-user-password:
    put:
      tags:
        - Password
      summary: Change Password
      description: Change the password of the user
      operationId: changePassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangePasswordRequest"
      responses:
        "200":
          description: Password changed successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
        "400":
          description: Invalid input or Password change failed
      security:
        - token:
            - write:apiKey
            - read:apiKey
components:
  schemas:
    Login:
      type: object
      properties:
        email:
          type: string
          example: yourmail@gmail.com
        password:
          type: string
          example: secret
    AuthResponse:
      type: object
      properties:
        status:
          type: bool
          example: true
        message:
          type: string
          example: message
        token:
          type: string
          example: token
        role:
          type: string
          example: admin
    Response:
      type: object
      properties:
        status:
          type: bool
          example: true
        message:
          type: string
          example: message
    User:
      type: object
      properties:
        _id:
          type: string
          example: asdasdasdasd
        email:
          type: string
          example: admin@gmail.com
        role:
          type: string
          example: admin
    SignupMahasiswaRequest:
      type: object
      properties:
        namalengkap:
          type: string
          example: John Doe
        tanggallahir:
          type: string
          example: "1990-01-01"
        jeniskelamin:
          type: string
          example: Male
        nim:
          type: string
          example: 123456789
        perguruantinggi:
          type: string
          example: Universitas ABC
        prodi:
          type: string
          example: Teknik Informatika
        akun:
          type: object
          properties:
            email:
              type: string
              example: mahasiswa@example.com
            phone:
              type: string
              example: 628765432109
            password:
              type: string
              example: yourpassword
            confirmpass:
              type: string
              example: yourpassword
          required:
            - email
            - password
            - confirmpass
      required:
        - namalengkap
        - tanggallahir
        - jeniskelamin
        - nim
        - perguruantinggi
        - prodi
        - akun
    SignupMitraRequest:
      type: object
      properties:
        namanarahubung:
          type: string
          example: John Doe
        nohpnarahubung:
          type: string
          example: "123456789"
        nama:
          type: string
          example: Mitra ABC
        kategori:
          type: string
          example: Perusahaan
        sektorindustri:
          type: string
          example: Teknologi
        tentang:
          type: string
          example: Deskripsi mengenai Mitra ABC
        alamat:
          type: string
          example: Jalan Mitra ABC No. 123
        website:
          type: string
          example: https://www.mitraabc.com
        akun:
          type: object
          properties:
            email:
              type: string
              example: mitra@example.com
            phone:
              type: string
              example: 628765432109
            password:
              type: string
              example: yourpassword
            confirmpass:
              type: string
              example: yourpassword
          required:
            - email
            - phone
            - password
            - confirmpass
      required:
        - namanarahubung
        - nohpnarahubung
        - nama
        - kategori
        - sektorindustri
        - tentang
        - alamat
        - website
        - akun
    Mahasiswa:
      type: object
      properties:
        id:
          type: string
          example: 1
        namalengkap:
          type: string
          example: John Doe
        tanggalahir:
          type: string
          example: "1990-01-01"
        jeniskelamin:
          type: string
          example: laki-laki
        nim:
          type: string
          example: 1211212
        perguruantinggi:
          type: string
          example: Universitas Logistik dan Bisnis Internasional
        prodi:
          type: string
          example: Teknik Informatika
        imageurl:
          type: string
          example: link_gambar.jpg
        akun:
          type: object
          properties:
            email:
              type: string
              example: jonhdoe@gmail.com
            role:
              type: string
              example: mahasiswa
    Mitra:
      type: object
      properties:
        id:
          type: string
          example: "605b9399a305031c549a9a65"
        namanarahubung:
          type: string
          example: "John Doe"
        nohpnarahubung:
          type: string
          example: "08123456789"
        nama:
          type: string
          example: "Mitra ABC"
        kategori:
          type: string
          example: "Teknologi"
        sektorindustri:
          type: string
          example: "IT"
        tentang:
          type: string
          example: "Perusahaan IT terkemuka"
        alamat:
          type: string
          example: "Jl. Contoh No. 123"
        website:
          type: string
          example: "http://www.mitra-abc.com"
        mou:
          type: integer
          example: 1
        imageurl:
          type: string
          example: "http://www.mitra-abc.com/image.jpg"
        akun:
          type: object
          properties:
            email:
              type: string
              example: jonhdoe@gmail.com
            role:
              type: string
              example: mitra
    Pembimbing:
      type: object
      properties:
        nama:
          type: string
          example: "John Doe"
        nik:
          type: string
          example: "123456789"
        prodi:
          type: string
          example: "Teknik Informatika"
        akun:
          type: object
          properties:
            email:
              type: string
              example: mitra@example.com
            phone:
              type: string
              example: 628765432109
            password:
              type: string
              example: yourpassword
            confirmpass:
              type: string
              example: yourpassword
    Mentor:
      type: object
      properties:
        nama:
          type: string
          example: "John Doe"
        nik:
          type: string
          example: "123456789"
        mitra:
          $ref: "#/components/schemas/Mitra"
        akun:
          type: object
          properties:
            email:
              type: string
              example: mitra@example.com
            phone:
              type: string
              example: 628765432109
            password:
              type: string
              example: yourpassword
            confirmpass:
              type: string
              example: yourpassword
    MentorRequest:
      type: object
      properties:
        nama:
          type: string
          example: "John Doe"
        nik:
          type: string
          example: "123456789"
        akun:
          type: object
          properties:
            email:
              type: string
              example: mitra@example.com
            phone:
              type: string
              example: 628765432109
            password:
              type: string
              example: yourpassword
            confirmpass:
              type: string
              example: yourpassword
    Magang:
      type: object
      properties:
        id:
          type: string
          example: "123"
        posisi:
          type: string
          example: "IT Intern"
        mitra:
          $ref: "#/components/schemas/Mitra"
        lokasi:
          type: string
          example: "Jakarta"
        createdat:
          type: string
          example: "2024-01-23T12:34:56Z"
        deskripsimagang:
          type: string
          example: "Magang di departemen pengembangan perangkat lunak"
        infotambahanmagang:
          type: string
          example: "Magang ini memerlukan pengetahuan dasar tentang pemrograman"
        expired:
          type: string
          example: "2024-12-31"
    MagangRequest:
      type: object
      properties:
        id:
          type: string
          example: "123"
        posisi:
          type: string
          example: "IT Intern"
        lokasi:
          type: string
          example: "Jakarta"
        createdat:
          type: string
          example: "2024-01-23T12:34:56Z"
        deskripsimagang:
          type: string
          example: "Magang di departemen pengembangan perangkat lunak"
        infotambahanmagang:
          type: string
          example: "Magang ini memerlukan pengetahuan dasar tentang pemrograman"
        expired:
          type: string
          example: "2024-12-31"
    MahasiswaMagang:
      type: object
      properties:
        id:
          type: string
          example: 1
        mahasiswa:
          $ref: "#/components/schemas/Mahasiswa"
        magang:
          $ref: "#/components/schemas/Magang"
        pembimbing:
          $ref: "#/components/schemas/Pembimbing"
        mentor:
          $ref: "#/components/schemas/Mentor"
        seleksiberkas:
          type: integer
          example: 1
        seleksiwawancara:
          type: integer
          example: 1
        status:
          type: integer
          example: 1
    Seleksi:
      type: object
      properties:
        id:
          type: string
          example: 1
        magangId:
          type: string
          example: 789012
        criteria:
          type: string
          example: "Interview performance"
        result:
          type: string
          example: "Passed"
    Task:
      type: object
      properties:
        id:
          type: string
          example: "605b9399a305031c549a9a65"
        mahasiswaMagang:
          $ref: "#/components/schemas/MahasiswaMagang"
        tasks:
          type: array
          example: ["Task 1", "Task 2"]
    TaskRequest:
      type: object
      properties:
        tasks:
          type: array
          example: ["Task 1", "Task 2"]
    Report:
      type: object
      properties:
        id:
          type: string
          example: "605b9399a305031c549a9a65"
        mahasiswaMagang:
          $ref: "#/components/schemas/MahasiswaMagang"
        task:
          type: string
          example: "Membuat tampilan login"
        deskripsi:
          type: string
          example: "Completed the coding task successfully"
        hasil:
          type: string
          example: "Excellent"
        kehadiran:
          type: string
          example: "link_gambar.jpg"
        createdat:
          type: string
          format: "date-time"
          example: "2024-01-23T12:34:56Z"
        updatedat:
          type: string
          format: "date-time"
          example: "2024-01-24T14:45:30Z"
        feedback:
          type: string
          example: "Great work!"
        nilaimentor:
          type: integer
          example: 100
        nilaipembimbing:
          type: integer
          example: 100
    ReportRequest:
      type: object
      properties:
        task:
          type: string
          example: "Membuat tampilan login"
        deskripsi:
          type: string
          example: "Completed the coding task successfully"
        hasil:
          type: string
          example: "Excellent"
        file:
          type: string
          format: binary
          example: "link_gambar.jpg"
    ChangeEmailRequest:
      type: object
      properties:
        email:
          type: string
          example: newemail@example.co
    ChangePasswordRequest:
      type: object
      properties:
        password:
          type: string
          example: yourcurrentpassword
        newpass:
          type: string
          example: yournewpassword
        confirmpass:
          type: string
          example: confirmyournewpassword
      required:
        - currentPassword
        - newPassword
  requestBodies:
    AuthReq:
      description: Request Authentication
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Login"
    UserArray:
      description: List of user object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/AuthResponse"
  securitySchemes:
    token:
      type: apiKey
      name: Authorization
      in: header
