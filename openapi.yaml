openapi: 3.0.3
info:
  title: Dokumen API Cloud Function - OpenAPI 3.0
  description: >-
    Dokumen API Cloud Function Aplikasi Internship Monitoring
  termsOfService: https://github.com/intern-monitoring/swagger
  contact:
    url: http://intermoni.my.id/proposal/team.html
  license:
    name: Intermoni Package
    url: https://pkg.go.dev/github.com/intern-monitoring/backend-intermoni
  version: 1.0.11
externalDocs:
  description: Repo GCF
  url: https://intern-monitoring.github.io/gcf/
servers:
  - url: https://asia-southeast2-bursakerja-project.cloudfunctions.net
tags:
  - name: Auth
    description: Auth to Access to API
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://intermoni.my.id/gcf/login/
  - name: SignUp Mahasiswa
    description: Registrasi Mahasiswa
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://intermoni.my.id/gcf/signup_mahasiswa/
  - name: SignUp Mitra
    description: Registrasi Mitra
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://intermoni.my.id/gcf/signup_mitra/
  - name: User
    description: Get Data User oleh Admin
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://intermoni.my.id/gcf/user/
  - name: Mahasiswa
    description: Data Mahasiswa
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://intermoni.my.id/gcf/mahasiswa/
  - name: Mitra
    description: Data Mitra
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://intermoni.my.id/gcf/mitra/
  - name: Pembimbing
    description: Data Pembimbing
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://intermoni.my.id/gcf/pembimbing/
  - name: Mentor
    description: Data Mentor
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://intermoni.my.id/gcf/mentor/
  - name: Magang
    description: Data Magang
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://intermoni.my.id/gcf/magang/
  - name: Mahasiswa Magang
    description: Data Mahasiswa Magang
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://intermoni.my.id/gcf/mahasiswamagang/
  - name: Seleksi
    description: Seleksi berkas & wawancara
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://intermoni.my.id/gcf/seleksi/
  - name: Report
    description: Report magang
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://intermoni.my.id/gcf/report/
  - name: Email
    description: Ganti Email
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://intermoni.my.id/gcf/email/
  - name: Password
    description: Ganti Password
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://intermoni.my.id/gcf/password/
paths:
  /intermoni-login:
    post:
      tags:
        - Auth
      summary: Login get Token and Role
      description: Login and Get User Token
      operationId: authService
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Login"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponse"
        "405":
          description: Invalid input
  /intermoni-user:
    get:
      tags:
        - User
      summary: Get User By ID
      description: List Data User
      operationId: getUserByID
      parameters:
        - name: userId
          in: query
          schema:
            type: string
          description: ID of the User
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserData"
        "400":
          description: Invalid status value
      security:
        - token:
            - write:apiKey
            - read:apiKey
  /intermoni-signup-mahasiswa:
    post:
      tags:
        - SignUp Mahasiswa
      summary: Signup Mahasiswa
      description: Register a new Mahasiswa
      operationId: signupMahasiswa
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignupMahasiswaRequest"
      responses:
        "201":
          description: Mahasiswa signed up successfully
        "400":
          description: Invalid input or Mahasiswa already exists
  /intermoni-signup-mitra:
    post:
      tags:
        - SignUp Mitra
      summary: Signup Mitra
      description: Register a new Mitra
      operationId: signupMitra
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignupMitraRequest"
      responses:
        "201":
          description: Mitra signed up successfully
        "400":
          description: Invalid input or Mitra already exists
  /intermoni-mahasiswa:
    get:
      tags:
        - Mahasiswa
      summary: Get Mahasiswa by ID oleh Admin
      description: Get a Mahasiswa by its ID
      operationId: getMahasiswaById
      parameters:
        - name: mahasiswaId
          in: query
          schema:
            type: string
          description: ID of the Mahasiswa
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Mahasiswa"
        "404":
          description: Mahasiswa not found
      security:
        - token:
            - write:apiKey
            - read:apiKey
    put:
      tags:
        - Mahasiswa
      summary: Update Mahasiswa oleh Admin & Mahasiswa
      description: Update an existing Mahasiswa
      operationId: updateMahasiswa
      parameters:
        - name: mahasiswaId
          in: query
          required: true
          schema:
            type: string
          description: ID of the Mahasiswa
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Mahasiswa"
            examples:
              mahasiswa:
                $ref: "#/components/examples/UpdateProfilMahasiswa"
              admin:
                $ref: "#/components/examples/SeleksiMahasiswa"
      responses:
        "200":
          description: Mahasiswa updated successfully
        "404":
          description: Mahasiswa not found
      security:
        - token:
            - write:apiKey
            - read:apiKey
  /intermoni-mitra:
    get:
      tags:
        - Mitra
      summary: Get Mitra by ID
      description: Get a Mitra by its ID
      operationId: getMitraById
      parameters:
        - name: mitraId
          in: query
          schema:
            type: string
          description: ID of the Mitra
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Mitra"
        "404":
          description: Mitra not found
      security:
        - token:
            - write:apiKey
            - read:apiKey
    put:
      tags:
        - Mitra
      summary: Update Mitra
      description: Update an existing Mitra
      operationId: updateMitra
      parameters:
        - name: mitraId
          in: query
          required: true
          schema:
            type: string
          description: ID of the Mitra
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Mitra"
            examples:
              mitra:
                $ref: "#/components/examples/UpdateProfilMitra"
              admin:
                $ref: "#/components/examples/SeleksiMitra"
      responses:
        "200":
          description: Mitra updated successfully
        "404":
          description: Mitra not found
      security:
        - token:
            - write:apiKey
            - read:apiKey
  /intermoni-pembimbing:
    post:
      tags:
        - Pembimbing
      summary: Create Pembimbing
      description: Create a new Pembimbing
      operationId: createPembimbing
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Pembimbing"
      responses:
        "201":
          description: Pembimbing created successfully
        "400":
          description: Invalid input
      security:
        - token:
            - write:apiKey
            - read:apiKey
    get:
      tags:
        - Pembimbing
      summary: Get Pembimbing by ID
      description: Get a Pembimbing by its ID
      operationId: getPembimbingById
      parameters:
        - name: pembimbingId
          in: query
          schema:
            type: string
          description: ID of the Pembimbing
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pembimbing"
        "404":
          description: Pembimbing not found
      security:
        - token:
            - write:apiKey
            - read:apiKey
    put:
      tags:
        - Pembimbing
      summary: Update Pembimbing
      description: Update an existing Pembimbing
      operationId: updatePembimbing
      parameters:
        - name: pembimbingId
          in: query
          required: true
          schema:
            type: string
          description: ID of the Pembimbing
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Pembimbing"
      responses:
        "200":
          description: Pembimbing updated successfully
        "404":
          description: Pembimbing not found
      security:
        - token:
            - write:apiKey
            - read:apiKey
  /intermoni-mentor:
    post:
      tags:
        - Mentor
      summary: Create Mentor
      description: Create a new Mentor
      operationId: createMentor
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Mentor"
      responses:
        "201":
          description: Mentor created successfully
        "400":
          description: Invalid input
      security:
        - token:
            - write:apiKey
            - read:apiKey
    get:
      tags:
        - Mentor
      summary: Get Mentor by ID
      description: Get a Mentor by its ID
      operationId: getMentorById
      parameters:
        - name: mentorId
          in: query
          schema:
            type: string
          description: ID of the Mentor
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Mentor"
        "404":
          description: Mentor not found
      security:
        - token:
            - write:apiKey
            - read:apiKey
    put:
      tags:
        - Mentor
      summary: Update Mentor
      description: Update an existing Mentor
      operationId: updateMentor
      parameters:
        - name: mentorId
          in: query
          required: true
          schema:
            type: string
          description: ID of the Mentor
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Mentor"
      responses:
        "200":
          description: Mentor updated successfully
        "404":
          description: Mentor not found
      security:
        - token:
            - write:apiKey
            - read:apiKey
  /intermoni-magang:
    post:
      tags:
        - Magang
      summary: Create Magang
      description: Create a new Magang
      operationId: createMagang
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Magang"
      responses:
        "201":
          description: Magang created successfully
        "400":
          description: Invalid input
      security:
        - token:
            - write:apiKey
            - read:apiKey
    get:
      tags:
        - Magang
      summary: Get Magang by ID
      description: Get a Magang by its ID
      operationId: getMagangById
      parameters:
        - name: magangId
          in: query
          schema:
            type: string
          description: ID of the Magang
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Magang"
        "404":
          description: Magang not found
      security:
        - token:
            - write:apiKey
            - read:apiKey
    put:
      tags:
        - Magang
      summary: Update Magang
      description: Update an existing Magang
      operationId: updateMagang
      parameters:
        - name: magangId
          in: query
          required: true
          schema:
            type: string
          description: ID of the Magang
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Magang"
      responses:
        "200":
          description: Magang updated successfully
        "404":
          description: Magang not found
      security:
        - token:
            - write:apiKey
            - read:apiKey
  /intermoni-mahasiswa-magang:
    post:
      tags:
        - Mahasiswa Magang
      summary: Create Mahasiswa Magang
      description: Create a new Mahasiswa Magang
      operationId: createMahasiswaMagang
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MahasiswaMagang"
      responses:
        "201":
          description: Mahasiswa Magang created successfully
        "400":
          description: Invalid input
      security:
        - token:
            - write:apiKey
            - read:apiKey
    get:
      tags:
        - Mahasiswa Magang
      summary: Get Mahasiswa Magang by ID
      description: Get a Mahasiswa Magang by its ID
      operationId: getMahasiswaMagangById
      parameters:
        - name: mahasiswaMagangId
          in: query
          schema:
            type: string
          description: ID of the Mahasiswa Magang
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MahasiswaMagang"
        "404":
          description: Mahasiswa Magang not found
      security:
        - token:
            - write:apiKey
            - read:apiKey
    put:
      tags:
        - Mahasiswa Magang
      summary: Update Mahasiswa Magang
      description: Update an existing Mahasiswa Magang
      operationId: updateMahasiswaMagang
      parameters:
        - name: mahasiswaMagangId
          in: query
          required: true
          schema:
            type: string
          description: ID of the Mahasiswa Magang
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MahasiswaMagang"
      responses:
        "200":
          description: Mahasiswa Magang updated successfully
        "404":
          description: Mahasiswa Magang not found
      security:
        - token:
            - write:apiKey
            - read:apiKey
    delete:
      tags:
        - Mahasiswa Magang
      summary: Delete Mahasiswa Magang
      description: Delete a Mahasiswa Magang by its ID
      operationId: deleteMahasiswaMagang
      parameters:
        - name: mahasiswaMagangId
          in: query
          required: true
          schema:
            type: string
          description: ID of the Mahasiswa Magang
      responses:
        "204":
          description: Mahasiswa Magang deleted successfully
        "404":
          description: Mahasiswa Magang not found
      security:
        - token:
            - write:apiKey
            - read:apiKey
  /intermoni-seleksi:
    put:
      tags:
        - Seleksi
      summary: Update Seleksi
      description: Update an existing Seleksi
      operationId: updateSeleksi
      parameters:
        - name: seleksiId
          in: query
          required: true
          schema:
            type: string
          description: ID of the Seleksi
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Seleksi"
      responses:
        "200":
          description: Seleksi updated successfully
        "404":
          description: Seleksi not found
      security:
        - token:
            - write:apiKey
            - read:apiKey
  /intermoni-report:
    post:
      tags:
        - Report
      summary: Create Report
      description: Create a new Report
      operationId: createReport
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Report"
      responses:
        "201":
          description: Report created successfully
        "400":
          description: Invalid input
      security:
        - token:
            - write:apiKey
            - read:apiKey
    get:
      tags:
        - Report
      summary: Get Report by ID
      description: Get a Report by its ID
      operationId: getReportById
      parameters:
        - name: reportId
          in: query
          schema:
            type: string
          description: ID of the Report
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Report"
        "404":
          description: Report not found
      security:
        - token:
            - write:apiKey
            - read:apiKey
    put:
      tags:
        - Report
      summary: Update Report
      description: Update an existing Report
      operationId: updateReport
      parameters:
        - name: reportId
          in: query
          required: true
          schema:
            type: string
          description: ID of the Report
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Report"
      responses:
        "200":
          description: Report updated successfully
        "404":
          description: Report not found
      security:
        - token:
            - write:apiKey
            - read:apiKey
    delete:
      tags:
        - Report
      summary: Delete Report
      description: Delete a Report by its ID
      operationId: deleteReport
      parameters:
        - name: reportId
          in: query
          required: true
          schema:
            type: string
          description: ID of the Report
      responses:
        "204":
          description: Report deleted successfully
        "404":
          description: Report not found
      security:
        - token:
            - write:apiKey
            - read:apiKey
  /intermoni-user-email:
    put:
      tags:
        - Email
      summary: Change Email
      description: Change the email address of the user
      operationId: changeEmail
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangeEmailRequest"
      responses:
        "200":
          description: Email changed successfully
        "400":
          description: Invalid input or Email change failed
      security:
        - token:
            - write:apiKey
            - read:apiKey
  /intermoni-user-password:
    put:
      tags:
        - Password
      summary: Change Password
      description: Change the password of the user
      operationId: changePassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangePasswordRequest"
      responses:
        "200":
          description: Password changed successfully
        "400":
          description: Invalid input or Password change failed
      security:
        - token:
            - write:apiKey
            - read:apiKey
components:
  schemas:
    Login:
      type: object
      properties:
        email:
          type: string
          example: yourmail@gmail.com
        password:
          type: string
          example: secret
    AuthResponse:
      type: object
      properties:
        status:
          type: bool
          example: true
        message:
          type: string
          example: message
        token:
          type: string
          example: token
        role:
          type: string
          example: admin
    User:
      type: object
      properties:
        _id:
          type: string
          example: asdasdasdasd
        email:
          type: string
          example: admin@gmail.com
        role:
          type: string
          example: admin
    UserData:
      type: object
      properties:
        data:
          type: object
        akun:
          type: object
          properties:
            _id:
              type: string
              example: asdasdasdasd
            email:
              type: string
              example: admin@gmail.com
            role:
              type: string
              example: admin

    SignupMahasiswaRequest:
      type: object
      properties:
        namalengkap:
          type: string
          example: John Doe
        tanggallahir:
          type: string
          example: "1990-01-01"
        jeniskelamin:
          type: string
          example: Male
        nim:
          type: string
          example: 123456789
        perguruantinggi:
          type: string
          example: Universitas ABC
        prodi:
          type: string
          example: Teknik Informatika
        akun:
          type: object
          properties:
            email:
              type: string
              example: mahasiswa@example.com
            password:
              type: string
              example: yourpassword
            confirmpass:
              type: string
              example: yourpassword
          required:
            - email
            - password
            - confirmpass
      required:
        - namalengkap
        - tanggallahir
        - jeniskelamin
        - nim
        - perguruantinggi
        - prodi
        - akun
    SignupMitraRequest:
      type: object
      properties:
        namanarahubung:
          type: string
          example: John Doe
        nohpnarahubung:
          type: string
          example: "123456789"
        nama:
          type: string
          example: Mitra ABC
        kategori:
          type: string
          example: Perusahaan
        sektorindustri:
          type: string
          example: Teknologi
        tentang:
          type: string
          example: Deskripsi mengenai Mitra ABC
        alamat:
          type: string
          example: Jalan Mitra ABC No. 123
        website:
          type: string
          example: https://www.mitraabc.com
        akun:
          type: object
          properties:
            email:
              type: string
              example: mitra@example.com
            password:
              type: string
              example: yourpassword
            confirmpass:
              type: string
              example: yourpassword
          required:
            - email
            - password
            - confirmpass
      required:
        - namanarahubung
        - nohpnarahubung
        - nama
        - kategori
        - sektorindustri
        - tentang
        - alamat
        - website
        - akun
    Mahasiswa:
      type: object
      properties:
        id:
          type: string
          example: 1
        name:
          type: string
          example: John Doe
        studentId:
          type: string
          example: 123456
        email:
          type: string
          example: john@example.com
    Mitra:
      type: object
      properties:
        id:
          type: string
          example: 1
        name:
          type: string
          example: Mitra Name
        address:
          type: string
          example: Mitra Address
        contact:
          type: string
          example: contact@example.com
    Pembimbing:
      type: object
      properties:
        id:
          type: string
          example: 1
        name:
          type: string
          example: Pembimbing Name
        email:
          type: string
          example: pembimbing@example.com
    Mentor:
      type: object
      properties:
        id:
          type: string
          example: 1
        name:
          type: string
          example: Mentor Name
        email:
          type: string
          example: mentor@example.com
    Magang:
      type: object
      properties:
        id:
          type: string
          example: 1
        name:
          type: string
          example: Magang Name
        duration:
          type: string
          example: 3 months
        location:
          type: string
          example: Magang Location
    MahasiswaMagang:
      type: object
      properties:
        id:
          type: string
          example: 1
        mahasiswaId:
          type: string
          example: 123456
        magangId:
          type: string
          example: 789012
    Seleksi:
      type: object
      properties:
        id:
          type: string
          example: 1
        magangId:
          type: string
          example: 789012
        criteria:
          type: string
          example: "Interview performance"
        result:
          type: string
          example: "Passed"
    Report:
      type: object
      properties:
        id:
          type: string
          example: 1
        magangId:
          type: string
          example: 789012
        content:
          type: string
          example: "This is the report content."
    ChangeEmailRequest:
      type: object
      properties:
        newEmail:
          type: string
          example: newemail@example.com
        password:
          type: string
          example: yourpassword
      required:
        - newEmail
        - password
    ChangePasswordRequest:
      type: object
      properties:
        currentPassword:
          type: string
          example: yourcurrentpassword
        newPassword:
          type: string
          example: yournewpassword
      required:
        - currentPassword
        - newPassword
  requestBodies:
    AuthReq:
      description: Request Authentication
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Login"
    UserArray:
      description: List of user object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/AuthResponse"
  securitySchemes:
    token:
      type: apiKey
      name: Authorization
      in: header
  examples:
    UpdateProfilMahasiswa:
      summary: Update Profil oleh Mahasiswa
      value:
        namalengkap: John Doe
        tanggallahir: 2002-08-12
        jeniskelamin: Laki-laki
        nim: 123456789
        perguruantinggi: Universitas ABC
        prodi: Teknik Informatika
    SeleksiMahasiswa:
      summary: Seleksi Mahasiswa oleh Admin
      value:
        seleksikampus: 1
    UpdateProfilMitra:
      summary: Update Profil oleh Mitra
      value:
        namanarahubung: John Doe
        nohpnarahubung: 08123456789
        nama: Mitra ABC
        kategori: Perusahaan
        sektorindustri: Teknologi
        tentang: Deskripsi mengenai Mitra ABC
        alamat: Jalan Mitra ABC No. 123
        website: https://www.mitraabc.com
    SeleksiMitra:
      summary: Confirm Mou oleh Admin
      value:
        mou: 1
